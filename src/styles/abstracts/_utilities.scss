@use 'maps' as *;

@each $color, $value in $colors {
   @if $color ==
      pm-white or
      $color ==
      pm-coral or
      $color ==
      rapture-blue or
      $color ==
      dark-green
   {
      .text-#{$color} {
         color: var(--clr-#{$color}, $value);
      }
   }
   .bg-#{$color} {
      background-color: var(--clr-#{$color}, $value);
   }
}

@each $font, $map in $typography {
   @if $font == sizes {
      @each $property, $value in $map {
         .#{$property} {
            font-size: var(--#{$property}, $value);
         }
      }
   }

   @if $font == family {
      @each $property, $value in $map {
         .#{$property} {
            font-family: var(--#{$property}, $value);
         }
      }
   }

   @if $font == weights {
      @each $property, $value in $map {
         .#{$property} {
            font-weight: var(--#{$property}, $value);
         }
      }
   }

   @if $font == line-heights {
      @each $property, $value in $map {
         .#{$property} {
            line-height: var(--#{$property}, $value);
         }
      }
   }

   @if $font == alignment {
      @each $property, $value in $map {
         .#{$property} {
            text-align: var(--#{$property}, $value);
         }
      }
   }
}

// =========================================
// layout
// =========================================

.container {
   width: 90%;
   max-width: var(--align-mw);
   margin-inline: auto;
   outline: 1px solid white;
}

.flow > *:where(:not(:first-child)) {
   margin-top: var(--flow-space, 1rem);
}

.sr-only {
   position: absolute;
   width: 1px;
   height: 1px;
   padding: 0;
   margin: -1px;
   overflow: hidden;
   clip: rect(0, 0, 0, 0);
   white-space: nowrap;
   border: 0;
}

.hidden {
   display: none;
}

.grid-container {
   display: grid;
   gap: var(--gap, 1rem);
}
