{"version":3,"sources":["styles/base/_typography.scss","styles/abstracts/_variables.scss","styles/abstracts/_utilities.scss","styles/base/_base.scss","styles/base/_reset.scss","styles/components/_button.scss","styles/abstracts/_mixins.scss","styles/components/_thin-border.scss","styles/components/_logo.scss","styles/components/_hero.scss","styles/components/_skip.scss","styles/layout/_forms.scss","styles/layout/_header.scss","styles/layout/_nav.scss"],"names":[],"mappings":"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","file":"main.48b3db1d.css","sourceRoot":"../src","sourcesContent":["@use 'abstracts' as *;\n\n@import url('https://fonts.googleapis.com/css2?family=Livvic:wght@400;500;600;700&display=swap');\n\nbody {\n   font: var(--fw-regular) var(--fs-200) 'livvic', sans-serif;\n   line-height: var(--lh-200);\n}\n","@use 'maps' as *;\n\n:root {\n   @each $color, $value in $colors {\n      --clr-#{$color}: #{$value};\n   }\n\n   @each $screen-size, $font-size in $typography {\n      @each $size, $value in $font-size {\n         --#{$size}: #{$value};\n      }\n   }\n\n   @each $prop, $value in $layout {\n      // @if $prop == small {doBelow - change to nested loop within}\n      --#{$prop}: #{$value};\n      // @else {\n      // @include mq(medium) {\n      // nested loop within - on medium map\n      // }\n      // }\n      // or hard code - barely any\n   }\n   // mq - re-assign layout variables (flex-basis px - %, gap, text-alignment)\n}\n","@use 'maps' as *;\n\n@each $color, $value in $colors {\n   @if $color ==\n      pm-white or\n      $color ==\n      pm-coral or\n      $color ==\n      rapture-blue or\n      $color ==\n      dark-green\n   {\n      .text-#{$color} {\n         color: var(--clr-#{$color}, $value);\n      }\n   }\n   .bg-#{$color} {\n      background-color: var(--clr-#{$color}, $value);\n   }\n}\n\n@each $font, $map in $typography {\n   @if $font == sizes {\n      @each $property, $value in $map {\n         .#{$property} {\n            font-size: var(--#{$property}, $value);\n         }\n      }\n   }\n\n   @if $font == weights {\n      @each $property, $value in $map {\n         .#{$property} {\n            font-weight: var(--#{$property}, $value);\n         }\n      }\n   }\n\n   @if $font == line-heights {\n      @each $property, $value in $map {\n         .#{$property} {\n            line-height: var(--#{$property}, $value);\n         }\n      }\n   }\n\n   @if $font == alignment {\n      @each $property, $value in $map {\n         .#{$property} {\n            text-align: var(--#{$property}, $value);\n         }\n      }\n   }\n}\n\n// =========================================\n// layout\n// =========================================\n\n.container {\n   width: 90%;\n   max-width: var(--align-mw);\n   margin-inline: auto;\n   outline: 1px solid white;\n}\n\n.flow > *:where(:not(:first-child)) {\n   margin-top: var(--flow-space, 1rem);\n}\n\n.sr-only {\n   position: absolute;\n   width: 1px;\n   height: 1px;\n   padding: 0;\n   margin: -1px;\n   overflow: hidden;\n   clip: rect(0, 0, 0, 0);\n   white-space: nowrap;\n   border: 0;\n}\n\n.hidden {\n   display: none;\n}\n\n.grid-container {\n   display: grid;\n}\n","@use 'abstracts' as *;\n\nfieldset {\n   padding: 0;\n   margin: 0;\n   border: none;\n}\n\na {\n   text-decoration: none;\n}\n\nbutton {\n   border: none;\n   outline: none;\n   background: transparent;\n   &:hover {\n      cursor: pointer;\n   }\n}\n\n// input {\n//    border: none;\n//    outline: 1px solid;\n// }\n\n// Accessibility\n\n// :focus-within {\n//    outline: 3px dotted red;\n// }\n","/* Box sizing rules */\n*,\n*::before,\n*::after {\n   box-sizing: border-box;\n}\n\n/* Remove default margin */\nbody,\nh1,\nh2,\nh3,\nh4,\np,\nfigure,\nblockquote,\ndl,\ndd {\n   margin: 0;\n}\n\n/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */\nul[role='list'],\nol[role='list'] {\n   list-style: none;\n   padding: 0;\n   margin: 0;\n}\n\n/* Set core root defaults */\nhtml:focus-within {\n   scroll-behavior: smooth;\n}\n\n/* Set core body defaults */\nbody {\n   min-height: 100vh;\n   text-rendering: optimizeSpeed;\n   line-height: 1.5;\n}\n\n/* A elements that don't have a class get default styles */\na:not([class]) {\n   text-decoration-skip-ink: auto;\n}\n\n/* Make images easier to work with */\nimg,\npicture {\n   max-width: 100%;\n   display: block;\n}\n\n/* Inherit fonts for inputs and buttons */\ninput,\nbutton,\ntextarea,\nselect {\n   font: inherit;\n}\n\n/* Remove all animations and transitions for people that prefer not to see them */\n@media (prefers-reduced-motion: reduce) {\n   html:focus-within {\n      scroll-behavior: auto;\n   }\n   *,\n   *::before,\n   *::after {\n      animation-duration: 0.01ms !important;\n      animation-iteration-count: 1 !important;\n      transition-duration: 0.01ms !important;\n      scroll-behavior: auto !important;\n   }\n}\n","@use 'abstracts' as *;\n\n.btn {\n   border-radius: 50px;\n\n   // =========================================\n   // primary\n   // =========================================\n\n   @include m(pm) {\n      display: inline-block;\n      padding: 0.4em 2.1em;\n      border: 2px solid;\n\n      @include m(light) {\n         @include mq(max-width, tablet) {\n            margin-top: 1.3rem;\n         }\n         // @extend %text-white;\n         border-color: hsl(var(--clr-pm-white));\n         &:hover {\n            // @extend %bg-white;\n            // @extend %text-dark;\n         }\n      }\n\n      @include m(dark) {\n         // @extend %text-dark;\n         // @extend %bg-transparent;\n         border-color: hsl(var(--clr-dark-green));\n         &:hover {\n            // @extend %bg-green-dark;\n            // @extend %text-white;\n         }\n      }\n   }\n\n   // =========================================\n   // secondary\n   // =========================================\n\n   @include m(sd) {\n      // @extend %text-dark;\n      // @extend %bg-white;\n      padding: 0.5em 2em;\n      border: none;\n      outline: none;\n      &:hover {\n         // @extend %bg-rapture;\n      }\n   }\n\n   @include m(contact) {\n      padding: 0.7em 2em;\n   }\n\n   @include m(disabled) {\n      opacity: 0.5;\n   }\n}\n","@use 'variables' as *;\n@use 'maps' as *;\n\n// =========================================\n// BEM\n// =========================================\n\n@mixin e($element) {\n   &__#{$element} {\n      @content;\n   }\n}\n\n@mixin m($modifier) {\n   &--#{$modifier} {\n      @content;\n   }\n}\n\n// =========================================\n// flex\n// =========================================\n\n@mixin flexy($disp: flex, $dir: null, $wrap: null, $just: null, $align: null) {\n   display: $disp;\n   flex-direction: $dir;\n   flex-wrap: $wrap;\n   justify-content: $just;\n   align-items: $align;\n   gap: var(--gap, 1rem);\n}\n\n// =========================================\n// box-model\n// =========================================\n\n@mixin box-model($disp: null, $width: null, $height: null, $border: null) {\n   display: $disp;\n   width: $width;\n   height: $height;\n   border: $border;\n}\n\n// =========================================\n// position\n// =========================================\n\n@mixin position($pos, $width: null, $height: null, $z-index: null) {\n   position: $pos;\n   width: $width;\n   height: $height;\n   z-index: $z-index;\n   @content;\n}\n\n// =========================================\n// bg-img\n// =========================================\n\n@mixin bg-img($img: null, $position: null, $size: null) {\n   background-image: url('#{$img}');\n   background-repeat: no-repeat;\n   background-position: $position;\n   background-size: $size;\n}\n\n// =========================================\n// pseudo-el\n// =========================================\n\n@mixin p-el($el, $content: '', $width: null, $height: null) {\n   @if $el == 'before' or $el == 'after' {\n      &::#{$el} {\n         content: $content;\n         position: absolute;\n         display: block;\n         width: $width;\n         height: $height;\n         @content;\n      }\n   } @else {\n      @error 'Before or after string required for valid pseudo element.';\n   }\n}\n\n// =========================================\n// social-icons\n// =========================================\n\n@mixin social-icon() {\n   transition: transform 200ms linear, color 130ms linear;\n   &:hover,\n   &:focus {\n      color: var(--clr-pm-coral);\n      transform: scale(1.1);\n   }\n}\n\n// =========================================\n// media query\n// =========================================\n\n@mixin mq($width, $key) {\n   @if $width ==\n      'max-width' or\n      $width ==\n      'min-width' or\n      $key ==\n      'tablet' or\n      $key ==\n      'medium' or\n      $key ==\n      'large'\n   {\n      @media ($width: map-get($breakpoints, $key)) {\n         @content;\n      }\n   } @else {\n      @error 'Tablet, medium, large & valid width required for media query.';\n   }\n}\n\n// =========================================\n// feature queries\n// =========================================\n\n@mixin fq($prop, $val) {\n   @supports (#{$prop}: $val) {\n      @content;\n   }\n}\n\n@mixin fqs($selector) {\n   @supports selector(#{$selector}) {\n      @content;\n   }\n}\n","@use 'abstracts' as *;\n\n.small-border {\n   @include p-el(before, 20px, 5px) {\n      // @extend %bg-coral;\n      top: 0;\n      left: 0;\n   }\n   // .hero &::before {\n   //    // @extend %bg-rapture;\n   // }\n}\n","@use 'abstracts' as *;\n\n.logo {\n   @include m(pm) {\n      display: inline-block;\n      // wide width slightly smaller - 90%\n   }\n}\n","@use 'abstracts' as *;\n\n.hero {\n   @include m(parent) {\n      margin-top: var(--margin-test);\n   }\n}\n","@use 'abstracts' as *;\n\n.skip-to-content {\n   @include position($pos: absolute, $z-index: 9999);\n   transform: translateY(-100%);\n   transition: transform 0.3s ease-in-out;\n   &:focus {\n      transform: translateY(0);\n   }\n}\n","@use 'abstracts' as *;\n\n.form {\n   // @extend %bg-transparent;\n   // @extend %text-white;\n   width: 100%;\n   padding-top: 1rem;\n   border: 0 0 0.1px solid hsl(var(--clr-pm-white)) 0;\n   outline: none;\n   &::placeholder {\n      color: hsl(var(--clr-pm-white) / 0.7);\n   }\n   &:hover,\n   &:focus {\n      border-bottom-color: hsl(var(--clr-rapture-blue));\n   }\n\n   @include m(error) {\n      border-bottom-color: hsl(var(--clr-pm-coral));\n      &::placeholder {\n         color: hsl(var(--clr-pm-coral) / 0.7);\n      }\n   }\n\n   @include e(input) {\n      padding-bottom: 0.8rem;\n   }\n\n   @include e(text-area) {\n      padding-bottom: 3rem;\n   }\n}\n","@use 'abstracts' as *;\n\n.header {\n   @include m(pm) {\n      padding: var(--ct-padding-lg);\n      outline: 3px solid var(--clr-pm-coral);\n   }\n   @include m(home) {\n      padding-bottom: 13rem;\n   }\n   @include e(nav--container) {\n      position: relative;\n   }\n}\n","@use 'abstracts' as *;\n\n/*\n.nav > * {}\n .nav > .active {} \n*/\n\n// nav mobile\n\n.mobile-nav-toggle {\n   display: none;\n   @include mq(max-width, tablet) {\n      @include box-model($disp: block);\n      @include position(absolute, $width: 1.5rem, $z-index: 2000);\n      top: 0.4rem;\n      right: 0;\n      aspect-ratio: 1;\n      @include bg-img(\n         $img: '../assets/nav/icon-hamburger.svg',\n         $position: center,\n         $size: 100%\n      );\n      &[aria-expanded='true'] {\n         @include bg-img($img: '../assets/about/icon-close.svg');\n      }\n   }\n}\n\n.sidebar {\n   display: none;\n   @include mq(max-width, tablet) {\n      //   dark overlay when active\n      //   link hover states\n      display: block;\n      padding: min(6rem, 15vh) 3rem;\n      position: fixed;\n      inset: 0 0 0 calc(100% - 310px);\n      width: 310px;\n      z-index: 1000;\n      overflow-x: hidden;\n      transform: translateX(100%);\n      transition: transform 0.5s ease-in-out;\n      @include bg-img(\n         $img: '../assets/bg/bg-pattern-about-1-mobile-nav-1.svg',\n         $position: calc(100% + 153px) 100%,\n         $size: 300px\n      );\n      & nav {\n         margin-top: 2rem;\n      }\n      & li:nth-child(2) {\n         margin-left: 0.4rem;\n      }\n      & a {\n         font-size: var(--fs-300);\n      }\n      &[data-visible='true'] {\n         transform: translateX(0);\n      }\n   }\n}\n\nbody[data-visible='true'] {\n   overflow-y: hidden;\n}\n\n// nav wide\n\n.nav--wide,\n.btn--wide {\n   @include mq(max-width, tablet) {\n      display: none;\n   }\n}\n"]}