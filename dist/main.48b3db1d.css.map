{"version":3,"sources":["styles/base/_typography.scss","styles/abstracts/_variables.scss","styles/utilities/_colors.scss","styles/utilities/_fonts.scss","styles/utilities/_layout.scss","styles/base/_base.scss","styles/base/_reset.scss","styles/components/_button.scss","styles/abstracts/_mixins.scss","styles/components/_form.scss","styles/components/_thin-border.scss"],"names":[],"mappings":"AAGQ;ACHR;EAGG;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAIA;EACA;EACA;EACA;EACA;EAIA;EAIA;EACA;EACA;EACA;EAIA;EACA;EACA;EACA;EACA;EAIA;EACA;EACA;EACA;EACA;EACA;EACA;;;AC7CH;AAEA;EACG;;;AAOH;EACG;;;AAOH;EACG;;;AAGH;EACG;;;AAGH;EACG;;;AAGH;EACG;;;AAGH;AAEA;EACG;;;AAWH;EACG;;;ACjDH;AAEA;EACG;EACA;;;AAGH;EAEG;EACA;;;AAkBH;AAEA;EACG;;;AAeH;AC9CA;EACG;EACA;EACA;EACA;;;AAGH;EACG;;;AAGH;EACG;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;AAGH;EACG;;;AClBH;EACG;EACA;EACA;;;AAGH;EACG;;;AAIA;EACG;;;ACpBN;AACA;AAAA;AAAA;EAGG;;;AAGH;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAUG;;;AAGH;AACA;AAAA;EAEG;EACA;EACA;;;AAGH;AACA;EACG;;;AAGH;AACA;EACG;EACA;EACA;;;AAGH;AACA;EACG;;;AAGH;AACA;AAAA;EAEG;EACA;;;AAGH;AACA;AAAA;AAAA;AAAA;EAIG;;;AAGH;AACA;EACG;IACG;;;EAEH;AAAA;AAAA;IAGG;IACA;IACA;IACA;;;ACrEN;EACG;;ACMA;EDHG;EACA;EACA;;ACCH;EDGM;;ACHN;EDaM;;ACbN;EDwBG;EACA;EACA;;AC1BH;EDiCG;;ACjCH;EDqCG;;;AE5CN;EAGG;EACA;EACA;EACA;;AACA;EACG;;AAEH;EAEG;;ADLH;ECSG;;AACA;EACG;;ADjBN;ECsBG;;ADtBH;EC0BG;;;ADAA;EACG;EACA;EACA;EACA,OE9BgB;EF+BhB,QE/BsB;EAEzB;EACA","file":"main.48b3db1d.css","sourceRoot":"../src","sourcesContent":["@use 'abstracts' as *;\n@use 'utilities' as *;\n\n@import url('https://fonts.googleapis.com/css2?family=Livvic:wght@400;500;600;700&display=swap');\n\nbody {\n   @extend %fs-200;\n   @extend %fw-regular;\n}\n",":root {\n   // colors\n\n   --clr-pm-green: 186 98% 17%;\n   --clr-pm-coral: 0 87% 73%;\n   --clr-pm-white: 0 0% 100%;\n   --clr-rapture-blue: 179 42% 63%;\n   --clr-police-blue: 187 41% 29%;\n   --clr-jungle-green: 186 100% 14%;\n   --clr-sacramento-green: 186 96% 10%;\n   --clr-dark-green: 186 100% 8%;\n\n   // font-sizes\n\n   --fs-600: 6.6667rem;\n   --fs-500: 4.2667rem;\n   --fs-400: 3.2rem;\n   --fs-300: 1.2rem; // contact\n   --fs-200: 0.9375rem;\n\n   // font-family\n\n   --ff-serif: 'Livvic', sans-serif;\n\n   // font-weights\n\n   --fw-regular: 400;\n   --fw-medium: 500;\n   --fw-semi-bold: 600;\n   --fw-bold: 700;\n\n   // line-heights\n\n   --lh-600: 1;\n   --lh-500: 0.875;\n   --lh-400: 1;\n   --lh-300: 1.5556; // contact\n   --lh-200: 1.666;\n\n   // layout\n\n   --margin-test: 2rem;\n   --align-mw: 60rem;\n   --ct-padding-sm: 2rem 0; // footer + cta\n   --ct-padding-md: 3rem 0; // clients\n   --ct-padding-lg: 4rem 0; // evertyhing else\n   --gap: 1rem;\n   --flow-space: 1rem;\n}\n","@use 'abstracts' as *;\n\n/* ----- bg colors ------ */\n\n%bg-green-pm {\n   background-color: hsl(var(--clr-pm-green));\n}\n\n%bg-green-jungle {\n   background-color: hsl(var(--clr-jungle-green));\n}\n\n%bg-green-dark {\n   background-color: hsl(var(--clr-dark-green));\n}\n\n%bg-green-sac {\n   background-color: hsl(var(--clr-sacramento-green));\n}\n\n%bg-coral {\n   background-color: hsl(var(--clr-pm-coral));\n}\n\n%bg-white {\n   background-color: hsl(var(--clr-pm-white));\n}\n\n%bg-rapture {\n   background-color: hsl(var(--clr-rapture-blue));\n}\n\n%bg-transparent {\n   background-color: transparent;\n}\n\n/* ----- fg colors ------ */\n\n%text-white {\n   color: hsl(var(--clr-pm-white));\n}\n\n%text-coral {\n   color: hsl(var(--clr-pm-coral));\n}\n\n%text-rapture {\n   color: hsl(var(--clr-rapture-blue));\n}\n\n%text-dark {\n   color: hsl(var(--clr-dark-green));\n}\n","@use 'abstracts' as *;\n\n/* ----- font sizes + line heights ------ */\n\n%fs-200 {\n   font-size: var(--fs-200, 0.9375rem);\n   line-height: var(--lh-200, 1.666);\n}\n\n%fs-300 {\n   // contact\n   font-size: var(--fs-300, 1.2rem);\n   line-height: var(--lh-300, 1.5556);\n}\n\n%fs-400 {\n   font-size: var(--fs-400, 3.2rem);\n   line-height: var(--lh-400, 1);\n}\n\n%fs-500 {\n   font-size: var(--fs-500, 4.2667rem);\n   line-height: var(--lh-500, 0.875);\n}\n\n%fs-600 {\n   font-size: var(--fs-600, 6.6667rem);\n   line-height: var(--lh-600, 1);\n}\n\n/* ----- font weights ------ */\n\n%fw-regular {\n   font-weight: var(--fw-regular, 400);\n}\n\n%fw-medium {\n   font-weight: var(--fw-medium, 500);\n}\n\n%fw-sbold {\n   font-weight: var(--fw-semi-bold, 600);\n}\n\n%fw-bold {\n   font-weight: var(--fw-bold, 700);\n}\n\n/* ----- text alignment ------ */\n\n%text-left {\n   text-align: left;\n}\n\n%text-center {\n   text-align: center;\n}\n","@use 'abstracts' as *;\n\n.container {\n   width: 90%;\n   max-width: var(--align-mw);\n   margin-inline: auto;\n   outline: 1px solid white;\n}\n\n.flow > *:where(:not(:first-child)) {\n   margin-top: var(--flow-space, 1rem);\n}\n\n.sr-only {\n   position: absolute;\n   width: 1px;\n   height: 1px;\n   padding: 0;\n   margin: -1px;\n   overflow: hidden;\n   clip: rect(0, 0, 0, 0);\n   white-space: nowrap;\n   border: 0;\n}\n\n.hidden {\n   display: none;\n}\n\n%flex {\n   display: flex;\n   gap: var(--gap, 1rem);\n}\n\n%space-between {\n   justify-content: space-between;\n   align-items: center;\n}\n\n%grid {\n   display: grid;\n   gap: var(--gap, 1rem);\n}\n","@use 'abstracts' as *;\n@use 'utilities' as *;\n\nbody {\n   @extend %bg-green-pm;\n   @extend %text-white;\n}\n\nfieldset {\n   padding: 0;\n   margin: 0;\n   border: none;\n}\n\na {\n   text-decoration: none;\n}\n\nbutton {\n   &:hover {\n      cursor: pointer;\n   }\n}\n\n// input {\n//    border: none;\n//    outline: 1px solid;\n// }\n\n// Accessibility\n\n// :focus-within {\n//    outline: 3px dotted red;\n// }\n","/* Box sizing rules */\n*,\n*::before,\n*::after {\n   box-sizing: border-box;\n}\n\n/* Remove default margin */\nbody,\nh1,\nh2,\nh3,\nh4,\np,\nfigure,\nblockquote,\ndl,\ndd {\n   margin: 0;\n}\n\n/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */\nul[role='list'],\nol[role='list'] {\n   list-style: none;\n   padding: 0;\n   margin: 0;\n}\n\n/* Set core root defaults */\nhtml:focus-within {\n   scroll-behavior: smooth;\n}\n\n/* Set core body defaults */\nbody {\n   min-height: 100vh;\n   text-rendering: optimizeSpeed;\n   line-height: 1.5;\n}\n\n/* A elements that don't have a class get default styles */\na:not([class]) {\n   text-decoration-skip-ink: auto;\n}\n\n/* Make images easier to work with */\nimg,\npicture {\n   max-width: 100%;\n   display: block;\n}\n\n/* Inherit fonts for inputs and buttons */\ninput,\nbutton,\ntextarea,\nselect {\n   font: inherit;\n}\n\n/* Remove all animations and transitions for people that prefer not to see them */\n@media (prefers-reduced-motion: reduce) {\n   html:focus-within {\n      scroll-behavior: auto;\n   }\n   *,\n   *::before,\n   *::after {\n      animation-duration: 0.01ms !important;\n      animation-iteration-count: 1 !important;\n      transition-duration: 0.01ms !important;\n      scroll-behavior: auto !important;\n   }\n}\n","@use 'abstracts' as *;\n@use 'utilities' as *;\n\n.btn {\n   border-radius: 50px;\n\n   @include m(pm) {\n      padding: 1em 3em;\n      border: 2px solid;\n      text-decoration: none;\n      @include m(light) {\n         @extend %text-white;\n         @extend %bg-transparent;\n         border-color: hsl(var(--clr-pm-white));\n         &:hover {\n            @extend %bg-white;\n            @extend %text-dark;\n         }\n      }\n\n      @include m(dark) {\n         @extend %text-dark;\n         @extend %bg-transparent;\n         border-color: hsl(var(--clr-dark-green));\n         &:hover {\n            @extend %bg-green-dark;\n            @extend %text-white;\n         }\n      }\n   }\n\n   @include m(sd) {\n      @extend %text-dark;\n      @extend %bg-white;\n      padding: 0.5em 2em;\n      border: none;\n      outline: none;\n      &:hover {\n         @extend %bg-rapture;\n      }\n   }\n\n   @include m(contact) {\n      padding: 0.7em 2em;\n   }\n\n   @include m(disabled) {\n      opacity: 0.5;\n   }\n}\n","@use 'variables' as *;\n@use 'maps' as *;\n\n@mixin e($element) {\n   &__#{$element} {\n      @content;\n   }\n}\n\n@mixin m($modifier) {\n   &--#{$modifier} {\n      @content;\n   }\n}\n\n@mixin flex-parent($direction, $justify, $align) {\n   flex-direction: $direction;\n   justify-content: $justify;\n   align-items: $align;\n}\n\n@mixin bg-img($img, $position, $size) {\n   background-image: url('#{$img}');\n   background-repeat: no-repeat;\n   background-position: #{$position};\n   background-size: #{$size};\n}\n\n@mixin p-el($el, $width: null, $height: null) {\n   @if $el == 'before' or $el == 'after' {\n      &::#{$el} {\n         content: '';\n         position: absolute;\n         display: block;\n         width: $width;\n         height: $height;\n         @content;\n      }\n   } @else {\n      @error 'Before or after string required for valid pseudo element.';\n   }\n}\n\n@mixin mq($key) {\n   @media (min-width: map-get($breakpoints, $key)) {\n      @content;\n   }\n}\n\n@mixin fq($prop, $val) {\n   @supports (#{$prop}: $val) {\n      @content;\n   }\n}\n","@use 'abstracts' as *;\n@use 'utilities' as *;\n\n.form {\n   @extend %bg-transparent;\n   @extend %text-white;\n   width: 100%;\n   padding-top: 1rem;\n   border: 0 0 0.1px solid hsl(var(--clr-pm-white)) 0;\n   outline: none;\n   &::placeholder {\n      color: hsl(var(--clr-pm-white) / 0.7);\n   }\n   &:hover,\n   &:focus {\n      border-bottom-color: hsl(var(--clr-rapture-blue));\n   }\n\n   @include m(error) {\n      border-bottom-color: hsl(var(--clr-pm-coral));\n      &::placeholder {\n         color: hsl(var(--clr-pm-coral) / 0.7);\n      }\n   }\n\n   @include e(input) {\n      padding-bottom: 0.8rem;\n   }\n\n   @include e(text-area) {\n      padding-bottom: 3rem;\n   }\n}\n","@use 'abstracts' as *;\n@use 'utilities' as *;\n\n.small-border {\n   @include p-el(before, 20px, 5px) {\n      @extend %bg-coral;\n      top: 0;\n      left: 0;\n   }\n   .hero &::before {\n      @extend %bg-rapture;\n   }\n}\n"]}