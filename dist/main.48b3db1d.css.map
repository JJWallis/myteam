{"version":3,"sources":["styles/base/_typography.scss","styles/utilities/_colors.scss","styles/utilities/_fonts.scss","styles/abstracts/_variables.scss","styles/utilities/_layout.scss","styles/base/_reset.scss","styles/components/_button.scss","styles/abstracts/_mixins.scss","styles/components/_form.scss"],"names":[],"mappings":"AAEQ;ACAR;AAEA;EACG;;;AAOH;EACG;;;AAWH;EACG;;;AAGH;EACG;;;AAGH;EACG;;;AAGH;AAEA;EACG;;;AAWH;EACG;;;ACjDH;AAEA;EACG,WCYM;EDXN,aC8BM;;;ADNT;AAEA;EACG,aCRU;;;ACvBb;EACG;EACA;EACA;;;AAIH;EACG,YD8BU;;;AExCb;AACA;AAAA;AAAA;EAGG;;;AAGH;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAUG;;;AAGH;AACA;AAAA;EAEG;;;AAGH;AACA;EACG;;;AAGH;AACA;EACG;EACA;EACA;;;AAGH;AACA;EACG;;;AAGH;AACA;AAAA;EAEG;EACA;;;AAGH;AACA;AAAA;AAAA;AAAA;EAIG;;;AAGH;AACA;EACG;IACG;;;EAEH;AAAA;AAAA;IAGG;IACA;IACA;IACA;;;ACnEN;EACG;EACA;;ACKA;EDDG;EACA;;ACAH;EDIM;;ACJN;EDaM;;ACbN;EDsBG;EACA;;ACvBH;ED+BG;;;AEtCN;EACG;EACA;EACA;EACA;;AAGA;EACG;;AAEH;EAEG;;ADLH;ECSG;;AACA;EACG;;ADSH;EACG;EACA;EACA;ECTA;EACA;EACA;;ADtBN;EC2BG;;AD3BH;EC+BG","file":"main.48b3db1d.css","sourceRoot":"../src","sourcesContent":["@use 'abstracts' as *;\n@use 'utilities' as *;\n@import url('https://fonts.googleapis.com/css2?family=Livvic:wght@400;500;600;700&display=swap');\n\nbody {\n   @extend %fs-200;\n   @extend %fw-regular;\n}\n","@use 'abstracts' as *;\n\n/* ----- bg colors ------ */\n\n%bg-green-pm {\n   background-color: hsl($clr-pm-green);\n}\n\n%bg-green-jungle {\n   background-color: hsl($clr-jungle-green);\n}\n\n%bg-green-dark {\n   background-color: hsl($clr-dark-green);\n}\n\n%bg-green-sac {\n   background-color: hsl($clr-sacramento-green);\n}\n\n%bg-coral {\n   background-color: hsl($clr-pm-coral);\n}\n\n%bg-white {\n   background-color: hsl($clr-pm-white);\n}\n\n%bg-rapture {\n   background-color: hsl($clr-rapture-blue);\n}\n\n%bg-transparent {\n   background-color: transparent;\n}\n\n/* ----- fg colors ------ */\n\n%text-white {\n   color: hsl($clr-pm-white);\n}\n\n%text-coral {\n   color: hsl($clr-pm-coral);\n}\n\n%text-rapture {\n   color: hsl($clr-rapture-blue);\n}\n\n%text-dark {\n   color: hsl($clr-dark-green);\n}\n\n// /* ----- bg colors ------ */\n\n// .bg-green-pm {\n//    background-color: hsl($clr-pm-green);\n// }\n\n// .bg-green-jungle {\n//    background-color: hsl($clr-jungle-green);\n// }\n\n// .bg-green-dark {\n//    background-color: hsl($clr-dark-green);\n// }\n\n// .bg-green-sac {\n//    background-color: hsl($clr-sacramento-green);\n// }\n\n// .bg-coral {\n//    background-color: hsl($clr-pm-coral);\n// }\n\n// /* ----- fg colors ------ */\n\n// .text-white {\n//    color: hsl($clr-pm-white);\n// }\n\n// .text-coral {\n//    color: hsl($clr-pm-coral);\n// }\n\n// .text-rapture {\n//    color: hsl($clr-rapture-blue);\n// }\n\n// .text-dark {\n//    color: hsl($clr-dark-green);\n// }\n","@use 'abstracts' as *;\n\n/* ----- font sizes + line heights ------ */\n\n%fs-200 {\n   font-size: $fs-200;\n   line-height: $lh-200;\n}\n\n%fs-300 {\n   // contact\n   font-size: $fs-300;\n   line-height: $lh-300;\n}\n\n%fs-400 {\n   font-size: $fs-400;\n   line-height: $lh-400;\n}\n\n%fs-500 {\n   font-size: $fs-500;\n   line-height: $lh-500;\n}\n\n%fs-600 {\n   font-size: $fs-600;\n   line-height: $lh-600;\n}\n\n/* ----- font weights ------ */\n\n%fw-regular {\n   font-weight: $fw-regular;\n}\n\n%fw-medium {\n   font-weight: $fw-medium;\n}\n\n%fw-sbold {\n   font-weight: $fw-semi-bold;\n}\n\n%fw-bold {\n   font-weight: $fw-bold;\n}\n\n// /* ----- font sizes + line heights ------ */\n\n// .fs-200 {\n//    font-size: $fs-200;\n//    line-height: $lh-200;\n// }\n\n// .fs-300 {\n//    font-size: $fs-300;\n//    line-height: $lh-300;\n// }\n\n// .fs-400 {\n//    font-size: $fs-400;\n//    line-height: $lh-400;\n// }\n\n// .fs-500 {\n//    font-size: $fs-500;\n//    line-height: $lh-500;\n// }\n\n// .fs-600 {\n//    font-size: $fs-600;\n//    line-height: $lh-600;\n// }\n\n// /* ----- font weights ------ */\n\n// .fw-regular {\n//    font-weight: $fw-regular;\n// }\n\n// .fw-medium {\n//    font-weight: $fw-medium;\n// }\n\n// .fw-sbold {\n//    font-weight: $fw-semi-bold;\n// }\n\n// .fw-bold {\n//    font-weight: $fw-bold;\n// }\n","// colors\n\n$clr-pm-green: 186 98% 17%;\n$clr-pm-coral: 0 87% 73%;\n$clr-pm-white: 0 0% 100%;\n$clr-rapture-blue: 179 42% 63%;\n$clr-police-blue: 187 41% 29%;\n$clr-jungle-green: 186 100% 14%;\n$clr-sacramento-green: 186 96% 10%;\n$clr-dark-green: 186 100% 8%;\n\n// font-sizes\n\n$fs-600: 6.6667rem;\n$fs-500: 4.2667rem;\n$fs-400: 3.2rem;\n$fs-300: 1.2rem; // contact\n$fs-200: 0.9375rem;\n\n// font-family\n\n$ff-serif: 'Livvic', sans-serif;\n\n// font-weights\n\n$fw-regular: 400;\n$fw-medium: 500;\n$fw-semi-bold: 600;\n$fw-bold: 700;\n\n// line-heights\n\n$lh-600: 1;\n$lh-500: 0.875;\n$lh-400: 1;\n$lh-300: 1.5556; // contact\n$lh-200: 1.666;\n\n// layout\n\n$flow-space: 1rem;\n","@use 'abstracts' as *;\n\n.container {\n   width: 90%;\n   max-width: 60rem;\n   margin-inline: auto;\n   //    outline: 2px solid white;\n}\n\n.flow > *:where(:not(:first-child)) {\n   margin-top: $flow-space;\n}\n\n%flex {\n   display: flex;\n   // gap\n}\n\n%grid {\n   display: grid;\n   // gap\n}\n","/* Box sizing rules */\n*,\n*::before,\n*::after {\n   box-sizing: border-box;\n}\n\n/* Remove default margin */\nbody,\nh1,\nh2,\nh3,\nh4,\np,\nfigure,\nblockquote,\ndl,\ndd {\n   margin: 0;\n}\n\n/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */\nul[role='list'],\nol[role='list'] {\n   list-style: none;\n}\n\n/* Set core root defaults */\nhtml:focus-within {\n   scroll-behavior: smooth;\n}\n\n/* Set core body defaults */\nbody {\n   min-height: 100vh;\n   text-rendering: optimizeSpeed;\n   line-height: 1.5;\n}\n\n/* A elements that don't have a class get default styles */\na:not([class]) {\n   text-decoration-skip-ink: auto;\n}\n\n/* Make images easier to work with */\nimg,\npicture {\n   max-width: 100%;\n   display: block;\n}\n\n/* Inherit fonts for inputs and buttons */\ninput,\nbutton,\ntextarea,\nselect {\n   font: inherit;\n}\n\n/* Remove all animations and transitions for people that prefer not to see them */\n@media (prefers-reduced-motion: reduce) {\n   html:focus-within {\n      scroll-behavior: auto;\n   }\n   *,\n   *::before,\n   *::after {\n      animation-duration: 0.01ms !important;\n      animation-iteration-count: 1 !important;\n      transition-duration: 0.01ms !important;\n      scroll-behavior: auto !important;\n   }\n}\n","@use 'abstracts' as *;\n@use 'utilities' as *;\n\n.btn {\n   border-radius: 50px;\n   padding: 1em 3em;\n   @extend %text-dark;\n\n   @include m(pm) {\n      text-decoration: none;\n      border: 2px solid;\n      @include m(light) {\n         @extend %text-white;\n         @extend %bg-transparent;\n         border-color: hsl($clr-pm-white);\n         &:hover {\n            @extend %bg-white;\n            @extend %text-dark;\n         }\n      }\n\n      @include m(dark) {\n         @extend %bg-transparent;\n         border-color: hsl($clr-dark-green);\n         &:hover {\n            @extend %bg-green-dark;\n            @extend %text-white;\n         }\n      }\n   }\n\n   @include m(sd) {\n      outline: none;\n      border: none;\n      @extend %bg-white;\n      &:hover {\n         @extend %bg-rapture;\n      }\n   }\n\n   @include m(disabled) {\n      opacity: 0.5;\n   }\n}\n","@use 'variables' as *;\n@use 'maps' as *;\n\n@mixin e($element) {\n   &__#{$element} {\n      @content;\n   }\n}\n\n@mixin m($modifier) {\n   &--#{$modifier} {\n      @content;\n   }\n}\n\n@mixin flex-parent($direction, $justify, $align) {\n   flex-direction: $direction;\n   justify-content: $justify;\n   align-items: $align;\n}\n\n@mixin bg-img($img, $position, $size) {\n   background-image: url('#{$img}');\n   background-repeat: no-repeat;\n   background-position: #{$position};\n   background-size: #{$size};\n}\n\n@mixin p-el($el, $width: null, $height: null) {\n   @if $el == 'before' or $el == 'after' {\n      &::#{$el} {\n         content: 'Test';\n         position: absolute;\n         display: block;\n         width: $width;\n         height: $height;\n         @content;\n      }\n   } @else {\n      @error 'Before or after string required for valid pseudo element.';\n   }\n}\n\n@mixin mq($key) {\n   @media (min-width: map-get($breakpoints, $key)) {\n      @content;\n   }\n}\n\n@mixin fq($prop, $val) {\n   @supports (#{$prop}: $val) {\n      @content;\n   }\n}\n","@use 'abstracts' as *;\n@use 'utilities' as *;\n\n.form {\n   outline: none;\n   border: 0 0 0.1px solid hsl($clr-pm-white) 0;\n   width: 100%;\n   padding-top: 1rem;\n   @extend %bg-transparent;\n   @extend %text-white;\n   &::placeholder {\n      color: hsl(0 0% 100% / 0.7);\n   }\n   &:hover,\n   &:focus {\n      border-bottom-color: hsl($clr-rapture-blue);\n   }\n\n   @include m(error) {\n      border-bottom-color: hsl($clr-pm-coral);\n      &::placeholder {\n         color: hsl(0 87% 73% / 0.7);\n      }\n      @include p-el(after) {\n         top: 100px;\n         font-size: 10rem;\n         color: red;\n      }\n   }\n\n   @include e(input) {\n      padding-bottom: 0.8rem;\n   }\n\n   @include e(text-area) {\n      padding-bottom: 3rem;\n   }\n}\n"]}