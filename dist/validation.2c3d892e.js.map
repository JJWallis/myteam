{"version":3,"sources":["scripts/validation.ts"],"names":[],"mappings":"AAAA,IAAM,IAAI,GAAG,QAAQ,CAAC,aAAT,CAAuB,MAAvB,CAAb;AACA,IAAM,KAAK,GAAqB,IAAI,CAAC,aAAL,CAAmB,cAAnB,CAAhC;AACA,IAAM,SAAS,GAAG,IAAI,CAAC,aAAL,CAAmB,uBAAnB,CAAlB;AACA,IAAM,KAAK,GACR,wJADH;;AAGA,SAAS,QAAT,CAAkB,CAAlB,EAA0B;AACvB,MAAM,QAAQ,GAAuB,KAAK,CAAC,IAAN,CAClC,IAAI,CAAC,gBAAL,CAAsB,wBAAtB,CADkC,CAArC;AAGA,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAT,CACZ,UAAC,KAAD,EAAM;AAAK,WAAA,KAAK,CAAC,KAAN,KAAgB,EAAhB,IAAsB,KAAK,CAAC,KAAN,KAAgB,IAAtC;AAA0C,GADzC,CAAf;AAGA,MACG,CAAC,KAAK,CAAC,IAAN,CAAW,KAAK,CAAC,KAAjB,CAAD,IACA,CAAC,MAAM,CAAC,IAAP,CAAY,UAAC,KAAD,EAAM;AAAK,WAAA,KAAK,CAAC,EAAN,KAAa,aAAb;AAA0B,GAAjD,CAFJ,EAIG,MAAM,CAAC,IAAP,CAAY,KAAZ;;AACH,MAAI,MAAM,CAAC,MAAX,EAAmB;AAChB,IAAA,CAAC,CAAC,cAAF;AACA,IAAA,MAAM,CAAC,OAAP,CAAe,UAAC,KAAD,EAAM;AAAK,aAAA,cAAc,CAAC,KAAD,CAAd;AAAqB,KAA/C;AACF;AACH;;AAED,SAAS,cAAT,CAAwB,UAAxB,EAAoD;AACjD,MAAM,KAAK,GAAG,UAAU,CAAC,sBAAzB;AACA,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAjB;;AACA,MAAI,UAAU,CAAC,OAAX,KAAuB,UAA3B,EAAuC;AACpC,IAAA,QAAQ,CAAC,SAAT,CAAmB,GAAnB,CAAuB,wBAAvB;AACA,IAAA,QAAQ,CAAC,SAAT,GAAqB,wBAArB;AACF,GAHD,MAGO,IAAI,UAAU,CAAC,EAAX,KAAkB,aAAtB,EAAqC;AACzC,IAAA,QAAQ,CAAC,SAAT,CAAmB,GAAnB,CAAuB,aAAvB;AACA,IAAA,QAAQ,CAAC,SAAT,GAAqB,kCAArB;AACF,GAHM,MAGA;AACJ,IAAA,QAAQ,CAAC,SAAT,CAAmB,GAAnB,CAAuB,aAAvB;AACA,IAAA,QAAQ,CAAC,SAAT,GAAqB,wBAArB;AACF;;AACD,EAAA,KAAK,CAAC,MAAN,CAAa,QAAb;AACA,EAAA,UAAU,CAAC,YAAX,CAAwB,YAAxB,EAAsC,MAAtC;AACF;;AAED,IAAI,CAAC,gBAAL,CAAsB,QAAtB,EAAgC,QAAhC,GAEA;AACA","file":"validation.2c3d892e.js","sourceRoot":"../src","sourcesContent":["const form = document.querySelector('form')\nconst email: HTMLInputElement = form.querySelector('#input-email')\nconst btnSubmit = form.querySelector('button[type=\"submit\"]')\nconst regex =\n   /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\nfunction validate(e: Event) {\n   const userData: HTMLInputElement[] = Array.from(\n      form.querySelectorAll('[data-required=\"true\"]')\n   )\n   const errors = userData.filter(\n      (input) => input.value === '' || input.value === null\n   )\n   if (\n      !regex.test(email.value) &&\n      !errors.find((input) => input.id === 'input-email')\n   )\n      errors.push(email)\n   if (errors.length) {\n      e.preventDefault()\n      errors.forEach((input) => createErrorMsg(input))\n   }\n}\n\nfunction createErrorMsg(errorInput: HTMLInputElement) {\n   const label = errorInput.previousElementSibling\n   const errorMsg = document.createElement('div')\n   if (errorInput.tagName === 'TEXTAREA') {\n      errorMsg.classList.add('form--error--text-area')\n      errorMsg.innerText = 'This field is required'\n   } else if (errorInput.id === 'input-email') {\n      errorMsg.classList.add('form--error')\n      errorMsg.innerText = 'Correct email format is required'\n   } else {\n      errorMsg.classList.add('form--error')\n      errorMsg.innerText = 'This field is required'\n   }\n   label.append(errorMsg)\n   errorInput.setAttribute('data-error', 'true')\n}\n\nform.addEventListener('submit', validate)\n\n// refactor - inner text only set to email one if email (ternary post beefy conditions)\n// same for classList - only add textarea one if ...\n"]}